{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAIA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACHH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,MAEtBA,MAXMQ,SAASC,cAAc,SAsC/BC,iBAAiB,UAvBtB,SAAsBC,GACpBA,EAAEC,iBACF,MAAMC,EAAW,IAAIC,SAASH,EAAEI,eAC1BC,EAAa,GAEnB,IAAK,MAAOC,EAAKC,KAAUL,EAASM,UAClCH,EAAWC,GAAOG,OAAOF,GAG3B,IAAI,IAAIG,EAAW,EAAGA,GAAYL,EAAWM,OAAQD,IACnDvB,EAAcuB,EAAUL,EAAWhB,OAClCuB,MAAK,EAACxB,SAAEA,EAAQC,MAAEA,MACjBJ,EAAA4B,OAAOC,QAAQ,uBAAqB1B,QAAiBC,UAEtD0B,OAAM,EAAC3B,SAAEA,EAAQC,MAAEA,MAClBJ,EAAA4B,OAAOG,QAAQ,sBAAoB5B,QAAeC,UAEpDgB,EAAWhB,OAASgB,EAAWY,KAGjCjB,EAAEI,cAAcc","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form')\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n        if (shouldResolve) {\n          resolve({ position, delay })\n        } else {\n          reject({ position, delay })\n        };\n    }, delay)\n  })\n}\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n  const formData = new FormData(e.currentTarget);\n  const resultData = {};\n\n  for (const [key, value] of formData.entries()) {\n    resultData[key] = Number(value);\n  }\n  // console.log(resultData);\n  for(let position = 1; position <= resultData.amount; position++){\n    createPromise(position, resultData.delay)  \n    .then(({ position, delay }) => {\n      Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n    resultData.delay += resultData.step\n    // console.log(resultData.delay += resultData.step)\n  };\n  e.currentTarget.reset();\n};\n\nform.addEventListener('submit', onFormSubmit);"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","e","preventDefault","formData","FormData","currentTarget","resultData","key","value","entries","Number","position1","amount","then","Notify","success","catch","failure","step","reset"],"version":3,"file":"03-promises.d904699f.js.map"}